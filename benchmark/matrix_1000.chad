int matrixMultiplication(int[2] A, int A_rows, int A_cols, int[2] B, int B_rows, int B_cols) {
    if (A_cols != B_rows) {
        print(false);
        return 1;
    }

    int[2] C = new int[A_rows, B_cols];
    
    int i = 0;
    int j = 0;
    int k = 0;
    
    while i < A_rows {
        j = 0;
        while j < B_cols {
            C[i, j] = 0;
            k = 0;
            while k < A_cols {
                C[i, j] = C[i, j] + A[i, k] * B[k, j];
                k = k + 1;
            }
            j = j + 1;
        }
        i = i + 1;
    }

    return 0;
}

int main() {
    int row = 1000;
    int col = 1000;
    int[2] A = new int[row, col];
    int i = 0;
    int j = 0;

    while i < row {
        j = 0;
        while j < col {
            A[i, j] = i % 10 + 1;
            j = j + 1;
        }
        i = i + 1;
    }

    int[2] B = new int[col, row];
    i = 0;
    while i < col {
        j = 0;
        while j < row {
            B[i, j] = i % 10 + 1;
            j = j + 1;
        }   
        i = i + 1;
    }

    matrixMultiplication(A, row, col, B, col, row);

    return 0;
}
